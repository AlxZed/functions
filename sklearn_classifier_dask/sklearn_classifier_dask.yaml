kind: job
metadata:
  name: sklearn-classifier-dask
  tag: ''
  hash: cc40e40ffe3e3804da41bba727e1fc4adf55515a
  project: default
  labels:
    author: Iguazio
    framework: sklearn
  categories:
  - ml
  - training
  - dask
spec:
  command: ''
  args: []
  image: mlrun/ml-models
  env: []
  default_handler: train_model
  entry_points:
    train_model:
      name: train_model
      doc: Train a sklearn classifier with Dask
      parameters:
      - name: context
        doc: Function context.
        default: ''
      - name: dataset
        type: DataItem
        doc: Raw data file.
        default: ''
      - name: model_pkg_class
        type: str
        doc: Model to train, e.g, "sklearn.ensemble.RandomForestClassifier", or json
          model config.
        default: ''
      - name: label_column
        type: str
        doc: (label) Ground-truth y labels.
        default: label
      - name: train_validation_size
        type: float
        doc: (0.75) Train validation set proportion out of the full dataset.
        default: 0.75
      - name: sample
        type: float
        doc: (1.0) Select sample from dataset (n-rows/% of total), randomzie rows
          as default.
        default: 1.0
      - name: models_dest
        type: str
        doc: (models) Models subfolder on artifact path.
        default: models
      - name: test_set_key
        type: str
        doc: (test_set) Mlrun db key of held out data in artifact store.
        default: test_set
      - name: plots_dest
        type: str
        doc: (plots) Plot subfolder on artifact path.
        default: plots
      - name: dask_function
        type: str
        doc: dask function url (db://..)
        default: null
      - name: dask_client
        doc: dask client object
        default: null
      - name: file_ext
        type: str
        doc: (parquet) format for test_set_key hold out data
        default: parquet
      - name: random_state
        type: int
        doc: (42) sklearn seed
        default: 42
      outputs:
      - default: ''
      lineno: 29
  description: train any classifier using scikit-learn API over Dask
  build:
    functionSourceCode: aW1wb3J0IG1scnVuCgppbXBvcnQgd2FybmluZ3MKCndhcm5pbmdzLmZpbHRlcndhcm5pbmdzKCJpZ25vcmUiKQoKaW1wb3J0IG9zCmltcG9ydCBqb2JsaWIKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgZHVtcHMsIGxvYWQsIGR1bXAKCmZyb20gZGFzayBpbXBvcnQgZGF0YWZyYW1lIGFzIGRkCmZyb20gZGFzayBpbXBvcnQgYXJyYXkgYXMgZGEKZnJvbSBkYXNrLmRlbGF5ZWQgaW1wb3J0IGRlbGF5ZWQKZnJvbSBkYXNrX21sIGltcG9ydCBtb2RlbF9zZWxlY3Rpb24KZnJvbSBkYXNrX21sIGltcG9ydCBtZXRyaWNzCmZyb20gZGFza19tbC5wcmVwcm9jZXNzaW5nIGltcG9ydCBTdGFuZGFyZFNjYWxlciwgTGFiZWxFbmNvZGVyCgpmcm9tIG1scnVuLmFydGlmYWN0cyBpbXBvcnQgUGxvdEFydGlmYWN0CmZyb20gbWxydW4ubWx1dGlscy5tb2RlbHMgaW1wb3J0IGdlbl9za2xlYXJuX21vZGVsCmZyb20gbWxydW4udXRpbHMuaGVscGVycyBpbXBvcnQgY3JlYXRlX2NsYXNzCgppbXBvcnQgbWF0cGxvdGxpYi5weXBsb3QgYXMgcGx0CmZyb20geWVsbG93YnJpY2suY2xhc3NpZmllciBpbXBvcnQgUk9DQVVDLCBDbGFzc2lmaWNhdGlvblJlcG9ydCwgQ29uZnVzaW9uTWF0cml4CmZyb20geWVsbG93YnJpY2subW9kZWxfc2VsZWN0aW9uIGltcG9ydCBGZWF0dXJlSW1wb3J0YW5jZXMKCgpkZWYgdHJhaW5fbW9kZWwoCiAgICBjb250ZXh0LAogICAgZGF0YXNldDogbWxydW4uRGF0YUl0ZW0sCiAgICBtb2RlbF9wa2dfY2xhc3M6IHN0ciwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gImxhYmVsIiwKICAgIHRyYWluX3ZhbGlkYXRpb25fc2l6ZTogZmxvYXQgPSAwLjc1LAogICAgc2FtcGxlOiBmbG9hdCA9IDEuMCwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAibW9kZWxzIiwKICAgIHRlc3Rfc2V0X2tleTogc3RyID0gInRlc3Rfc2V0IiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBkYXNrX2Z1bmN0aW9uOiBzdHIgPSBOb25lLAogICAgZGFza19jbGllbnQ9Tm9uZSwKICAgIGZpbGVfZXh0OiBzdHIgPSAicGFycXVldCIsCiAgICByYW5kb21fc3RhdGU6IGludCA9IDQyLAopIC0+IE5vbmU6CgogICAgIiIiCiAgICBUcmFpbiBhIHNrbGVhcm4gY2xhc3NpZmllciB3aXRoIERhc2sKCiAgICA6cGFyYW0gY29udGV4dDogICAgICAgICAgICAgICAgIEZ1bmN0aW9uIGNvbnRleHQuCiAgICA6cGFyYW0gZGF0YXNldDogICAgICAgICAgICAgICAgIFJhdyBkYXRhIGZpbGUuCiAgICA6cGFyYW0gbW9kZWxfcGtnX2NsYXNzOiAgICAgICAgIE1vZGVsIHRvIHRyYWluLCBlLmcsICJza2xlYXJuLmVuc2VtYmxlLlJhbmRvbUZvcmVzdENsYXNzaWZpZXIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvciBqc29uIG1vZGVsIGNvbmZpZy4KICAgIDpwYXJhbSBsYWJlbF9jb2x1bW46ICAgICAgICAgICAgKGxhYmVsKSBHcm91bmQtdHJ1dGggeSBsYWJlbHMuCiAgICA6cGFyYW0gdHJhaW5fdmFsaWRhdGlvbl9zaXplOiAgICgwLjc1KSBUcmFpbiB2YWxpZGF0aW9uIHNldCBwcm9wb3J0aW9uIG91dCBvZiB0aGUgZnVsbCBkYXRhc2V0LgogICAgOnBhcmFtIHNhbXBsZTogICAgICAgICAgICAgICAgICAoMS4wKSBTZWxlY3Qgc2FtcGxlIGZyb20gZGF0YXNldCAobi1yb3dzLyUgb2YgdG90YWwpLCByYW5kb216aWUgcm93cyBhcyBkZWZhdWx0LgogICAgOnBhcmFtIG1vZGVsc19kZXN0OiAgICAgICAgICAgICAobW9kZWxzKSBNb2RlbHMgc3ViZm9sZGVyIG9uIGFydGlmYWN0IHBhdGguCiAgICA6cGFyYW0gdGVzdF9zZXRfa2V5OiAgICAgICAgICAgICh0ZXN0X3NldCkgTWxydW4gZGIga2V5IG9mIGhlbGQgb3V0IGRhdGEgaW4gYXJ0aWZhY3Qgc3RvcmUuCiAgICA6cGFyYW0gcGxvdHNfZGVzdDogICAgICAgICAgICAgIChwbG90cykgUGxvdCBzdWJmb2xkZXIgb24gYXJ0aWZhY3QgcGF0aC4KICAgIDpwYXJhbSBkYXNrX2Z1bmN0aW9uOiAgICAgICAgICAgZGFzayBmdW5jdGlvbiB1cmwgKGRiOi8vLi4pCiAgICA6cGFyYW0gZGFza19jbGllbnQ6ICAgICAgICAgICAgIGRhc2sgY2xpZW50IG9iamVjdAogICAgOnBhcmFtIGZpbGVfZXh0OiAgICAgICAgICAgICAgICAocGFycXVldCkgZm9ybWF0IGZvciB0ZXN0X3NldF9rZXkgaG9sZCBvdXQgZGF0YQogICAgOnBhcmFtIHJhbmRvbV9zdGF0ZTogICAgICAgICAgICAoNDIpIHNrbGVhcm4gc2VlZAogICAgIiIiCgogICAgIyBzZXQgdXAgZGFzayBjbGllbnQKICAgIGlmIGRhc2tfZnVuY3Rpb246CiAgICAgICAgY2xpZW50ID0gbWxydW4uaW1wb3J0X2Z1bmN0aW9uKGRhc2tfZnVuY3Rpb24pLmNsaWVudAogICAgZWxpZiBkYXNrX2NsaWVudDoKICAgICAgICBjbGllbnQgPSBkYXNrX2NsaWVudAogICAgZWxzZToKICAgICAgICByYWlzZSBWYWx1ZUVycm9yKCJkYXNrIGNsaWVudCB3YXMgbm90IHByb3ZpZGVkIikKCiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCJSZWFkIERhdGEiKQogICAgIyByZWFkIGRhdGEgd2l0aCBkYXNrIGFuZCBtbHJ1bgogICAgZGYgPSBkYXRhc2V0LmFzX2RmKGRmX21vZHVsZT1kZCkKCiAgICAjIHRha2Ugb25seSBudW1yaWNhbCBjb2xzCiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCJQcmVwIERhdGEiKQogICAgbnVtZXJpY3MgPSBbImludDE2IiwgImludDMyIiwgImludDY0IiwgImZsb2F0MTYiLCAiZmxvYXQzMiIsICJmbG9hdDY0Il0KICAgIGRmID0gZGYuc2VsZWN0X2R0eXBlcyhpbmNsdWRlPW51bWVyaWNzKQoKICAgICMgZHJvcG5hCiAgICBpZiBkZi5pc25hKCkuYW55KCkuYW55KCkuY29tcHV0ZSgpID09IFRydWU6CiAgICAgICAgcmFpc2UgRXhjZXB0aW9uKCJOQXMgdmFsdXMgZm91bmQiKQoKICAgICMgc2F2ZSBjb2xzIG5hbWVzCiAgICBkZl9oZWFkZXIgPSBkZi5jb2x1bW5zCgogICAgZGYgPSBkZi5zYW1wbGUoZnJhYz1zYW1wbGUpLnJlc2V0X2luZGV4KGRyb3A9VHJ1ZSkKICAgIGVuY29kZXIgPSBMYWJlbEVuY29kZXIoKQogICAgZW5jb2RlciA9IGVuY29kZXIuZml0KGRmW2xhYmVsX2NvbHVtbl0pCiAgICBYID0gZGYuZHJvcChsYWJlbF9jb2x1bW4sIGF4aXM9MSkudG9fZGFza19hcnJheShsZW5ndGhzPVRydWUpCiAgICB5ID0gZW5jb2Rlci50cmFuc2Zvcm0oZGZbbGFiZWxfY29sdW1uXSkKCiAgICBjbGFzc2VzID0gZGZbbGFiZWxfY29sdW1uXS5kcm9wX2R1cGxpY2F0ZXMoKSAgIyBubyB1bmlxdWUgdmFsdWVzIGluIGRhc2sKICAgIGNsYXNzZXMgPSBbc3RyKGkpIGZvciBpIGluIGNsYXNzZXNdCgogICAgY29udGV4dC5sb2dnZXIuaW5mbygiU3BsaXQgYW5kIFRyYWluIikKICAgIFhfdHJhaW4sIFhfdGVzdCwgeV90cmFpbiwgeV90ZXN0ID0gbW9kZWxfc2VsZWN0aW9uLnRyYWluX3Rlc3Rfc3BsaXQoCiAgICAgICAgWCwgeSwgdHJhaW5fc2l6ZT10cmFpbl92YWxpZGF0aW9uX3NpemUsIHJhbmRvbV9zdGF0ZT1yYW5kb21fc3RhdGUKICAgICkKCiAgICBzY2FsZXIgPSBTdGFuZGFyZFNjYWxlcigpCiAgICBzY2FsZXIgPSBzY2FsZXIuZml0KFhfdHJhaW4pCiAgICBYX3RyYWluX3RyYW5zZm9ybWVkID0gc2NhbGVyLnRyYW5zZm9ybShYX3RyYWluKQogICAgWF90ZXN0X3RyYW5zZm9ybWVkID0gc2NhbGVyLnRyYW5zZm9ybShYX3Rlc3QpCgogICAgbW9kZWxfY29uZmlnID0gZ2VuX3NrbGVhcm5fbW9kZWwobW9kZWxfcGtnX2NsYXNzLCBjb250ZXh0LnBhcmFtZXRlcnMuaXRlbXMoKSkKCiAgICBtb2RlbF9jb25maWdbIkZJVCJdLnVwZGF0ZSh7IlgiOiBYX3RyYWluX3RyYW5zZm9ybWVkLCAieSI6IHlfdHJhaW59KQoKICAgIENsYXNzaWZpZXJDbGFzcyA9IGNyZWF0ZV9jbGFzcyhtb2RlbF9jb25maWdbIk1FVEEiXVsiY2xhc3MiXSkKCiAgICBtb2RlbCA9IENsYXNzaWZpZXJDbGFzcygqKm1vZGVsX2NvbmZpZ1siQ0xBU1MiXSkKCiAgICAjIGxvYWQgYW5kIGZpdCBtb2RlbAogICAgd2l0aCBqb2JsaWIucGFyYWxsZWxfYmFja2VuZCgiZGFzayIpOgoKICAgICAgICAjIGluaXRpYWxpemUgY2xhc3NpZmllciBmcm9tIHNrbGVhcm4KICAgICAgICBtb2RlbCA9IG1vZGVsLmZpdCgqKm1vZGVsX2NvbmZpZ1siRklUIl0pCgogICAgIyBjcmVhdGUgcmVwb3J0cwogICAgY29udGV4dC5sb2dnZXIuaW5mbygiRXZhbHVhdGUiKQogICAgZXh0cmFfZGF0YV9kaWN0ID0ge30KICAgIGZvciByZXBvcnQgaW4gKFJPQ0FVQywgQ2xhc3NpZmljYXRpb25SZXBvcnQsIENvbmZ1c2lvbk1hdHJpeCk6CgogICAgICAgIHJlcG9ydF9uYW1lID0gc3RyKHJlcG9ydC5fX25hbWVfXykKICAgICAgICAjIGNsZWFyIG91dHB1dAogICAgICAgIHBsdC5jbGEoKQogICAgICAgIHBsdC5jbGYoKQogICAgICAgIHBsdC5jbG9zZSgpCgogICAgICAgICMgZ2VucmF0ZSByZXBvcnQKICAgICAgICB2aXogPSByZXBvcnQobW9kZWwsIGNsYXNzZXM9Y2xhc3NlcywgcGVyX2NsYXNzPVRydWUsIGlzX2ZpdHRlZD1UcnVlKQogICAgICAgIHZpei5maXQoWF90cmFpbl90cmFuc2Zvcm1lZCwgeV90cmFpbikgICMgRml0IHRoZSB0cmFpbmluZyBkYXRhIHRvIHRoZSB2aXN1YWxpemVyCiAgICAgICAgdml6LnNjb3JlKAogICAgICAgICAgICBYX3Rlc3RfdHJhbnNmb3JtZWQsIHlfdGVzdC5jb21wdXRlKCkKICAgICAgICApICAjIEV2YWx1YXRlIHRoZSBtb2RlbCBvbiB0aGUgdGVzdCBkYXRhCgogICAgICAgICMgbG9nIHJlcG9ydHMKICAgICAgICBwbG90ID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdChyZXBvcnRfbmFtZSwgYm9keT12aXouZmlnLCB0aXRsZT1yZXBvcnRfbmFtZSksIGRiX2tleT1GYWxzZQogICAgICAgICkKICAgICAgICBleHRyYV9kYXRhX2RpY3Rbc3RyKHJlcG9ydCldID0gcGxvdAoKICAgICAgICAjIGxvZyByZXN1bHRzCiAgICAgICAgaWYgcmVwb3J0X25hbWUgPT0gIlJPQ0FVQyI6CiAgICAgICAgICAgIGNvbnRleHQubG9nX3Jlc3VsdHMoCiAgICAgICAgICAgICAgICB7Im1pY3JvIjogdml6LnJvY19hdWMuZ2V0KCJtaWNybyIpLCAibWFjcm8iOiB2aXoucm9jX2F1Yy5nZXQoIm1hY3JvIil9CiAgICAgICAgICAgICkKCiAgICAgICAgZWxpZiByZXBvcnRfbmFtZSA9PSAiQ2xhc3NpZmljYXRpb25SZXBvcnQiOgogICAgICAgICAgICBmb3Igc2NvcmVfbmFtZSBpbiB2aXouc2NvcmVzXzoKICAgICAgICAgICAgICAgIGZvciBzY29yZV9jbGFzcyBpbiB2aXouc2NvcmVzX1tzY29yZV9uYW1lXToKCiAgICAgICAgICAgICAgICAgICAgY29udGV4dC5sb2dfcmVzdWx0cygKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NvcmVfbmFtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAiLSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgc2NvcmVfY2xhc3M6IHZpei5zY29yZXNfW3Njb3JlX25hbWVdLmdldChzY29yZV9jbGFzcykKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICkKCiAgICAgICAgIyB2aXouc2hvdygpCgogICAgIyBnZXQgZmVhdHVyZSBpbXBvcnRhbmNlCiAgICB2aXogPSBGZWF0dXJlSW1wb3J0YW5jZXMoCiAgICAgICAgbW9kZWwsCiAgICAgICAgY2xhc3Nlcz1jbGFzc2VzLAogICAgICAgIHBlcl9jbGFzcz1UcnVlLAogICAgICAgIGlzX2ZpdHRlZD1UcnVlLAogICAgICAgIGxhYmVscz1kZl9oZWFkZXIuZGVsZXRlKGRmX2hlYWRlci5nZXRfbG9jKGxhYmVsX2NvbHVtbikpLAogICAgKQogICAgdml6LmZpdChYX3RyYWluX3RyYW5zZm9ybWVkLCB5X3RyYWluKQogICAgdml6LnNjb3JlKFhfdGVzdF90cmFuc2Zvcm1lZCwgeV90ZXN0KQogICAgIyB2aXouc2hvdygpCgogICAgcGxvdCA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgIFBsb3RBcnRpZmFjdCgiRmVhdHVyZUltcG9ydGFuY2VzIiwgYm9keT12aXouZmlnLCB0aXRsZT0iRmVhdHVyZUltcG9ydGFuY2VzIiksCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQogICAgZXh0cmFfZGF0YV9kaWN0W3N0cigiRmVhdHVyZUltcG9ydGFuY2VzIildID0gcGxvdAoKICAgICMgY2xlYXIgZmluYWwgb3V0cHV0CiAgICBwbHQuY2xhKCkKICAgIHBsdC5jbGYoKQogICAgcGx0LmNsb3NlKCkKCiAgICAjIGxvZyBhcnRpZmFjdHMKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oIkxvZyBhcnRpZmFjdHMiKQogICAgYXJ0aWZhY3RfcGF0aCA9IGNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aChtb2RlbHNfZGVzdCkKCiAgICAjIHNldCBsYWJlbAogICAgY29udGV4dC5zZXRfbGFiZWwoImNsYXNzIiwgbW9kZWxfcGtnX2NsYXNzKQoKICAgICMgbG9nIG1vZGVscwogICAgY29udGV4dC5sb2dfbW9kZWwoCiAgICAgICAgIm1vZGVsIiwKICAgICAgICBib2R5PWR1bXBzKG1vZGVsKSwKICAgICAgICBhcnRpZmFjdF9wYXRoPWFydGlmYWN0X3BhdGgsCiAgICAgICAgbW9kZWxfZmlsZT0ibW9kZWwucGtsIiwKICAgICAgICBleHRyYV9kYXRhPWV4dHJhX2RhdGFfZGljdCwKICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICBsYWJlbHM9eyJjbGFzcyI6IG1vZGVsX3BrZ19jbGFzc30sCiAgICApCgogICAgIyBsb2cgc2NhbGVycwogICAgY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgInN0YW5kYXJkX3NjYWxlciIsCiAgICAgICAgYm9keT1kdW1wcyhzY2FsZXIpLAogICAgICAgIGFydGlmYWN0X3BhdGg9YXJ0aWZhY3RfcGF0aCwKICAgICAgICBtb2RlbF9maWxlPSJzY2FsZXIuZ3oiLAogICAgICAgIGxhYmVsPSJzdGFuZGFyZF9zY2FsZXIiLAogICAgKQoKICAgICMgbG9nIGVuY29kZXIKICAgIGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICJsYWJlbF9lbmNvZGVyIiwKICAgICAgICBib2R5PWR1bXBzKGVuY29kZXIpLAogICAgICAgIGFydGlmYWN0X3BhdGg9YXJ0aWZhY3RfcGF0aCwKICAgICAgICBtb2RlbF9maWxlPSJlbmNvZGVyLmd6IiwKICAgICAgICBsYWJlbD0ibGFiZWxfZW5jb2RlciIsCiAgICApCgogICAgIyBzZXQgYXNpZGUgc29tZSB0ZXN0IGRhdGEKICAgIGRmX3RvX3NhdmUgPSBkZWxheWVkKG5wLmNvbHVtbl9zdGFjaykoKFhfdGVzdCwgeV90ZXN0KSkuY29tcHV0ZSgpCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KAogICAgICAgIHRlc3Rfc2V0X2tleSwKICAgICAgICBkZj1wZC5EYXRhRnJhbWUoZGZfdG9fc2F2ZSwgY29sdW1ucz1kZl9oZWFkZXIpLCAgIyBpbXByb3ZlIGxvZyBkYXRhc2V0IGFiaWxpdHkKICAgICAgICBmb3JtYXQ9ZmlsZV9leHQsCiAgICAgICAgaW5kZXg9RmFsc2UsCiAgICAgICAgbGFiZWxzPXsiZGF0YS10eXBlIjogImhlbGQtb3V0In0sCiAgICAgICAgYXJ0aWZhY3RfcGF0aD1jb250ZXh0LmFydGlmYWN0X3N1YnBhdGgoImRhdGEiKSwKICAgICkKCiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCJEb25lISIpCg==
    commands: []
    code_origin: https://github.com/mlrun/functions.git#e748899c73de41a6a4ade56245143d900287ec3a:sklearn_classifier_dask.py
verbose: false
